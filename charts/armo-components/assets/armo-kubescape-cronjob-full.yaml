{{- $cloud_provider := (include "cloud_provider" .) -}}
{{- if .Capabilities.APIVersions.Has "batch/v1/CronJob" }}
apiVersion: batch/v1
{{- else if .Capabilities.APIVersions.Has "batch/v1beta1/CronJob" }}
apiVersion: batch/v1beta1
{{- else }}
apiVersion: batch/v1beta1
{{- end }}
    kind: CronJob
    metadata:
      name: {{ .Values.armoKubescape.name }}-recurring
      namespace: {{ .Values.armoNameSpace }}
      labels:
        app: {{ .Values.armoKubescape.name }}-recurring
        tier: {{ .Values.global.namespaceTier}}
    spec:
      schedule: "{{ .Values.armoScanScheduler.scanSchedule }}"
      jobTemplate:
        backoffLimit: 1
        spec:
          template:
            spec:
              containers:
              - name: kubescape
                image: "{{ .Values.armoKubescape.image.repository }}:{{ .Values.armoKubescape.image.tag }}"
                imagePullPolicy: {{ .Values.armoKubescape.image.pullPolicy }}
                command:
                  - kubescape
                env:
                - name: KS_DEFAULT_CONFIGMAP_NAME
                  value: "{{ .Values.armoKubescape.name }}-config"
                - name: KS_DEFAULT_CONFIGMAP_NAMESPACE
                  value: "{{ .Values.armoNameSpace }}"
                args: 
                - --submit
                - --logger
                - debug
                {{ if .Values.armoKubescape.enableHostScan }}
                - --enable-host-scan
                {{ end }}
                {{ if eq .Values.environment "dev" }}
                - --environment=dev
                {{ end }}
                {{ if eq .Values.environment "staging" }}
                - --environment=staging
                {{ end }}
                resources:
{{ toYaml .Values.armoKubescape.resources | indent 18 }}             
                volumeMounts:
                - name: kubescape-config-volume
                  mountPath: /root/.kubescape/config.json
                  subPath: config.json
              restartPolicy: OnFailure
              serviceAccountName: {{ .Values.global.armoKubescapeServiceAccountName }}
              automountServiceAccountToken: true
              volumes:
              - name: kubescape-config-volume
                configMap:
                  name: {{ .Values.armoKubescape.name }}-config
